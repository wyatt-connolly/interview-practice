apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-api
  namespace: devops-interview
  labels:
    app: backend-api
    environment: dev
    project: devops-interview
spec:
  replicas: 3
  selector:
    matchLabels:
      app: backend-api
  template:
    metadata:
      labels:
        app: backend-api
        environment: dev
        project: devops-interview
    spec:
      containers:
        - name: backend-api
          image: devops-interview-backend:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 9090
              name: metrics
          env:
            - name: NODE_ENV
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: NODE_ENV
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: LOG_LEVEL
            - name: CORS_ORIGIN
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: CORS_ORIGIN
            - name: RATE_LIMIT_WINDOW_MS
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: RATE_LIMIT_WINDOW_MS
            - name: RATE_LIMIT_MAX
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: RATE_LIMIT_MAX
            - name: BCRYPT_ROUNDS
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: BCRYPT_ROUNDS
            - name: JWT_EXPIRES_IN
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: JWT_EXPIRES_IN
            - name: JWT_REFRESH_EXPIRES_IN
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: JWT_REFRESH_EXPIRES_IN
            - name: REDIS_KEY_PREFIX
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: REDIS_KEY_PREFIX
            - name: DB_MAX_CONNECTIONS
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: DB_MAX_CONNECTIONS
            - name: DB_IDLE_TIMEOUT
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: DB_IDLE_TIMEOUT
            - name: LOG_FILE_ENABLED
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: LOG_FILE_ENABLED
            - name: LOG_FILE_NAME
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: LOG_FILE_NAME
            - name: LOG_FILE_MAX_SIZE
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: LOG_FILE_MAX_SIZE
            - name: LOG_FILE_MAX_FILES
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: LOG_FILE_MAX_FILES
            - name: PROMETHEUS_ENABLED
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: PROMETHEUS_ENABLED
            - name: PROMETHEUS_PORT
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: PROMETHEUS_PORT
            # Database configuration
            - name: DB_HOST
              value: "devops-interview-dev-db.cluster-xyz.us-west-2.rds.amazonaws.com"
            - name: DB_PORT
              value: "5432"
            - name: DB_NAME
              value: "devopsinterview"
            - name: DB_USERNAME
              value: "admin"
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: DB_PASSWORD
            - name: DB_SSL
              value: "true"
            # Redis configuration
            - name: REDIS_HOST
              value: "devops-interview-dev-redis.xyz.cache.amazonaws.com"
            - name: REDIS_PORT
              value: "6379"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: REDIS_PASSWORD
            - name: REDIS_DB
              value: "0"
            # JWT configuration
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: JWT_SECRET
            - name: SESSION_SECRET
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: SESSION_SECRET
            # AWS configuration
            - name: AWS_REGION
              valueFrom:
                secretKeyRef:
                  name: aws-secrets
                  key: AWS_REGION
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws-secrets
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws-secrets
                  key: AWS_SECRET_ACCESS_KEY
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /health/live
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 30
          volumeMounts:
            - name: logs
              mountPath: /app/logs
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
      volumes:
        - name: logs
          emptyDir: {}
      securityContext:
        fsGroup: 1001
      restartPolicy: Always
